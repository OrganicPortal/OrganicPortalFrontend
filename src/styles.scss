/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

:root,
.roboto-condensed-condensed {
	
	*,
	& {
		font-family: "Roboto", sans-serif;
	}
}

html, body {
	display: flex;
	padding: 0;
	
	margin: 0;
	flex: 1 1;
	
	width: 100%;
	height: 100%;
}

body {
	color: var(--text-color);
	
	--text-color: #333;
	--dark: #333;
	--gray: #f4f4f4;
	--white: white;
	
	--header-height: 70px;
	--footer-color: #303030;
	--link-color: #269bd1;
	--content-viewport-width: 1500px;
	
	--color-palette-1: #5e6d8a51;
	--color-palette-2: #cfffc9;
	--color-palette-3: #63b45b;
	--color-palette-4: #f8fff8;
	--color-palette-5: #d8e1d8;
	
	--dots-loadbar-color: #609870;
	
	--ngx-default-icon-color: var(--text-color);
	
	/* #region ngx-ngx-toastr */
	--ngx-toastr-animated-border-override: #fff;
	--ngx-toastr-bg-override: #404040;
	--ngx-toastr-shadow-override: rgba(71, 71, 71, 0.51);
	--ngx-toastr-text-override: #fff;
	/* #endregion ngx-ngx-toastr */
	
	--basic-button-color: #64b55c;
	--basic-button-active-color: #559e52;
	--basic-button-ripple-color: rgba(255, 255, 255, 0.16);
	--basic-button-raised-ripple-color: rgba(161, 161, 161, 0.16);
	
	--basic-link-ripple-color: rgba(255, 255, 255, 0.08);
	--basic-link-active-color-1: #c5ffbd;
	--basic-link-active-color-2: #9e9e9e;
	
	
	.mat-ripple-element {
		background-color: var(--basic-button-ripple-color);
	}
	
	.solar-outline {
		--ngx-icon-override-color-1: var(--ngx-default-icon-color);
	}
	
	.solar-bold {
		--ngx-icon-override-color-1: var(--ngx-default-icon-color);
		--ngx-icon-override-color-2: #fff;
	}
	
	.custom-collection {
		--ngx-custom-icon-color-1: var(--text-color)
	}
	
	.fx-row {
		display: flex;
		flex-direction: row;
	}
	
	.fx-col {
		display: flex;
		flex-direction: column;
	}
	
	.fx-gap {
		gap: 1rem;
	}
	
	.section-title {
		display: flex;
		flex-direction: column;
		gap: 10px;
		margin-block: 1rem;
		
		.title {
			margin: 0;;
			font-size: 1.7em;
			font-weight: 500;
		}
	}
}

.custom-button {
	display: flex;
	position: relative;
	padding: .6rem 1rem;
	font-size: .85em;
	font-weight: 500;
	
	line-height: 1.2em;
	overflow: hidden;
	
	align-items: center;
	flex-direction: row;
	justify-content: center;
	box-sizing: border-box;
	width: max-content;
	height: max-content;
	cursor: pointer;
	user-select: none;
	text-decoration: none;
	border: none;
	
	border-radius: 3px;
	outline: none;
	box-shadow: rgba(94, 122, 177, 0.3) 0px 2px 5px;
	gap: .3rem;
}

.custom-basic-button {
	transition: background-color .2s;
	white-space: nowrap;
	color: var(--white);
	
	background-color: var(--basic-button-color);
	will-change: background-color;
	
	.mat-ripple-element {
		background-color: var(--basic-button-ripple-color) !important;
	}
	
	ngx-icon {
		--ngx-icon-override-color-1: var(--white);
	}
	
	&:hover {
		background-color: var(--basic-button-active-color);
	}
}

.custom-raised-button {
	transition: background-color .2s ease, box-shadow .2s ease;
	color: var(--text-color);
	background-color: var(--white);
	box-shadow: var(--box-shadow-items);
	will-change: box-shadow, background-color;
	--box-shadow-items: rgba(94, 122, 177, 0.2) 0px 2px 5px;
	
	.mat-ripple-element {
		background-color: var(--basic-button-raised-ripple-color);
	}
	
	&:hover {
		background-color: var(--gray);
	}
}

.custom-basic-link {
	display: flex;
	font-size: 1em;
	line-height: 1.2em;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	cursor: pointer;
	user-select: none;
	white-space: nowrap;
	text-decoration: none;
	gap: .3rem;
}

.custom-basic-link-default-reverse-style {
	transition: color .2s ease;
	color: var(--white);
	will-change: color;
	
	ngx-icon {
		--ngx-icon-override-color-1: var(--white);
	}
	
	.mat-ripple-element {
		background-color: var(--basic-link-ripple-color) !important;
	}
	
	ngx-icon {
		path {
			transition: fill .3s ease, stroke .3s ease;
			will-change: fill, stroke;
		}
	}
	
	&:hover {
		color: var(--basic-link-active-color-1);
		
		ngx-icon {
			--ngx-icon-override-color-1: var(--basic-link-active-color-1);
		}
	}
}

.custom-basic-link-default-style {
	transition: color .2s ease;
	color: var(--text-color);
	
	ngx-icon {
		path {
			transition: fill .3s ease, stroke .3s ease;
			will-change: fill, stroke;
		}
	}
	
	.mat-ripple-element {
		background-color: var(--basic-link-ripple-color) !important;
	}
	
	&:hover {
		color: var(--basic-link-active-color-2);
		
		ngx-icon {
			--ngx-icon-override-color-1: var(--basic-link-active-color-2);
		}
	}
}

.full-rounded {
	border-radius: 2000px;
}

custom-input-field {
	display: flex;
	position: relative;
	
	width: 100%;
	min-height: var(--input-height);
	max-height: var(--input-height);
	
	transition: background-color .2s ease, border .2s ease;
	border: 1px solid var(--default-input-border-state);
	border-radius: 3px;
	
	background-color: var(--color-palette-4);
	
	--default-input-border-state: var(--color-palette-5);
	--input-height: 50px;
	--input-hover-bg: color-mix(in srgb, transparent 97%, var(--dark));
	--input-padding-inline: 1rem;
	--input-focus-border-color: color-mix(in srgb, transparent 30%, var(--color-palette-3));
	--label-text-color: color-mix(in srgb, transparent 50%, var(--dark));
	
	.suffix {
		display: flex;
		position: absolute;
		padding: 5px;
		
		z-index: 10;
		top: 50%;
		right: 0;
		
		align-items: center;
		
		justify-content: center;
		box-sizing: border-box;
		width: calc(var(--input-padding-inline) * 2.5);
		cursor: pointer;
		transform: translateY(-50%);
	}
	
	&:has(.suffix:not(:empty)) {
		.custom-input {
			padding-right: 2.5rem !important;
		}
	}
	
	.label {
		display: flex;
		position: absolute;
		padding: 5px 7px;
		font-size: .7em;
		line-height: 1em;
		
		z-index: 4;
		
		top: 50%;
		
		left: 0;
		overflow: hidden;
		align-items: center;
		justify-content: center;
		box-sizing: border-box;
		max-width: 100%;
		transition: transform .2s ease, border .2s ease, background-color .2s ease;
		transform: translateY(-50%);
		white-space: nowrap;
		color: var(--label-text-color);
		border: 1px solid transparent;
		border-radius: 5px;
		
		gap: .3rem;
		margin-inline: var(--input-padding-inline);
		
		*, & {
			cursor: text;
		}
		
		ngx-icon {
			--ngx-icon-override-color-1: var(--label-text-color);
		}
	}
	
	.custom-input {
		z-index: 3;
		flex: 1 1;
		border: none;
		outline: none;
		background-color: unset;
		padding-inline: var(--input-padding-inline);
	}
	
	&:has(.custom-input:hover) {
		background-color: var(--input-hover-bg);
	}
	
	&:has(.custom-input:focus) {
		border: 1px solid var(--input-focus-border-color);
		background-color: var(--input-hover-bg);
		
		.label {
			border: 1px solid var(--input-focus-border-color) !important;
		}
	}
	
	&:has(.custom-input:focus,
	.custom-input:placeholder-shown,
	.custom-input:not(.empty-field)
	) {
		.label {
			transform: translate(0, calc((-1 * var(--input-height) / 2) - 1.2em / 2 - 6px));
			border: 1px solid var(--default-input-border-state);
			background-color: var(--color-palette-4);
		}
	}
}
